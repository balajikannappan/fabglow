package com.niit.backend.model;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

@Entity
public class User {
	@Id
	private String email;
	
	private String password;
	
	private boolean enabled;
	
	@OneToOne(mappedBy="user")
	private Customer customer;
	
	private String role;
	
	/*@OneToMany (mappedBy="user")        //owning entity is cartitem so add mapped by in user
	private List<CartItem> cartItems;*/
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public boolean isEnabled() {
		return enabled;
	}
	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}
	public Customer getCustomer() {
		return customer;
	}
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}
	public Authorities getAuthorities() {
		return authorities;
	}
	public void setAuthorities(Authorities authorities) {
		this.authorities = authorities;
	}
	
	/* email password enabled cartitemid --> this structure is not possible because we have many cartitem ids but single user object
	 * so we go for cartitemid quantity price user_email
	 * only one entity can be owning entity
	 */
}
